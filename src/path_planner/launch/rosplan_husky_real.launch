<?xml version="1.0"?>
<launch>
  <arg name="data_folder" default="$(find path_planner)/../../examples"/>
  <arg name="world_name" default="grid"/>
  <arg name="hweight" default = "1"/>
  <arg name="heuristic" default = "1" /><!-- remove this -->
  <arg name="metricType" default="euclidean"/>
  <arg name="model_name" default="husky"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="0.0"/>


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg data_folder)/$(arg world_name).world"/> <!-- world_name is wrt GAZEBO_RESOURCE_PATH environment variable -->
    <arg name="verbose" value="true"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Load robot description -->
  <include file="$(find husky_description)/launch/description.launch"/>

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find husky_control)/config/control.yaml" />

  <!-- Spawn controllers -->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="husky_joint_publisher husky_velocity_controller"/>

  <!-- Spawn robot in gazebo -->
  <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model $(arg model_name)" />


  <param name="data_folder" type="string" value="$(arg data_folder)"/>
  <param name="hweight" value="$(arg hweight)"/>
  <param name="heuristic" value="$(arg heuristic)"/><!-- remove this -->
  <param name="metricType" type="string" value="$(arg metricType)"/>
  <param name="model_name" value="$(arg model_name)"/>

  <!-- core nodes -->
  <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
  <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
  <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>
  <!-- husky bridges -->
  <node name="husky_position" pkg="husky_position" type="husky_position"  output="screen" />
  <node name="husky_velocity" pkg="husky_velocity" type="husky_velocity"  output="screen" />
  <!-- coord transforming services -->
  <node name="grid_to_global" pkg="coord_transform" type="grid_to_global"  output="screen"/>
  <node name="global_to_grid" pkg="coord_transform" type="global_to_grid"  output="screen"/>
  <!-- data loaders -->
  <node name="occupancy_grid" pkg="occupancy_grid" type="create_grid.py"  output="screen"/>
  <node name="goal" pkg="task_maker" type="goal.py"  output="screen"/>

</launch>
