<?xml version="1.0"?>
<launch>
  <arg name="data_folder" default="$(find path_planner)/../../examples"/>
  <arg name="world_name" default="grid"/>
  <arg name="hweight" default = "1"/>
  <arg name="metricType" default = "1" />

  <arg name="robot_amount" default="3"/>


  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="third_tb3"  default="tb3_2"/>
  <arg name="fourth_tb3"  default="tb3_3"/>
  <arg name="fifth_tb3"  default="tb3_4"/>
  <arg name="sixth_tb3"  default="tb3_5"/>
  <arg name="seventh_tb3"  default="tb3_6"/>
  <arg name="eigth_tb3"  default="tb3_7"/>
  <arg name="ninth_tb3"  default="tb3_8"/>
  <arg name="tenth_tb3"  default="tb3_9"/>


  <arg name="first_tb3_x_pos" default="0.0"/>
  <arg name="first_tb3_y_pos" default="0.0"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 0.0"/>

  <arg name="second_tb3_x_pos" default=" 0.0"/>
  <arg name="second_tb3_y_pos" default="3.0"/>
  <arg name="second_tb3_z_pos" default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" 0.0"/>

  <arg name="third_tb3_x_pos" default=" 0.0"/>
  <arg name="third_tb3_y_pos" default=" 6.0"/>
  <arg name="third_tb3_z_pos" default=" 0.0"/>
  <arg name="third_tb3_yaw"   default=" 0.0"/>

  <arg name="fourth_tb3_x_pos" default=" 0.0"/>
  <arg name="fourth_tb3_y_pos" default=" 9.0"/>
  <arg name="fourth_tb3_z_pos" default=" 0.0"/>
  <arg name="fourth_tb3_yaw"   default=" 0.0"/>

  <arg name="fifth_tb3_x_pos" default=" 0.0"/>
  <arg name="fifth_tb3_y_pos" default=" 12.0"/>
  <arg name="fifth_tb3_z_pos" default=" 0.0"/>
  <arg name="fifth_tb3_yaw"   default=" 0.0"/>

  <arg name="sixth_tb3_x_pos" default=" 0.0"/>
  <arg name="sixth_tb3_y_pos" default=" 15.0"/>
  <arg name="sixth_tb3_z_pos" default=" 0.0"/>
  <arg name="sixth_tb3_yaw"   default=" 0.0"/>

  <arg name="seventh_tb3_x_pos" default=" 0.0"/>
  <arg name="seventh_tb3_y_pos" default=" 18.0"/>
  <arg name="seventh_tb3_z_pos" default=" 0.0"/>
  <arg name="seventh_tb3_yaw"   default=" 0.0"/>

  <arg name="eigth_tb3_x_pos" default=" 0.0"/>
  <arg name="eigth_tb3_y_pos" default=" 21.0"/>
  <arg name="eigth_tb3_z_pos" default=" 0.0"/>
  <arg name="eigth_tb3_yaw"   default=" 0.0"/>

  <arg name="ninth_tb3_x_pos" default=" 0.0"/>
  <arg name="ninth_tb3_y_pos" default=" 24.0"/>
  <arg name="ninth_tb3_z_pos" default=" 0.0"/>
  <arg name="ninth_tb3_yaw"   default=" 0.0"/>

  <arg name="tenth_tb3_x_pos" default=" 0.0"/>
  <arg name="tenth_tb3_y_pos" default=" 27.0"/>
  <arg name="tenth_tb3_z_pos" default=" 0.0"/>
  <arg name="tenth_tb3_yaw"   default=" 0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg data_folder)/$(arg world_name).world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="true"/>
  </include>

  <!-- coord transforming services -->
  <node name="grid_to_global" pkg="coord_transform" type="grid_to_global"  output="screen"/>
  <node name="global_to_grid" pkg="coord_transform" type="global_to_grid"  output="screen"/>

  <!-- grid node -->
  <param name="data_folder" value="$(arg data_folder)"/>
  <node name="occupancy_grid" pkg="occupancy_grid" type="create_grid.py"  output="screen"/>

  <!-- first turtlebot -->
  <group ns = "$(arg first_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg first_tb3)
                -x $(arg first_tb3_x_pos)
                -y $(arg first_tb3_y_pos)
                -z $(arg first_tb3_z_pos)
                -Y $(arg first_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg first_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg first_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg first_tb3)/grid_to_global" to="/grid_to_global"/>

    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg first_tb3)"/>
    <remap from="/$(arg first_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen"/>
  </group>

  <!-- second turtlebot -->
  <group ns = "$(arg second_tb3)" if="$(eval arg('robot_amount') > 1)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg second_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg second_tb3)
                -x $(arg second_tb3_x_pos)
                -y $(arg second_tb3_y_pos)
                -z $(arg second_tb3_z_pos)
                -Y $(arg second_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg second_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg second_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg second_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg second_tb3)"/>
    <remap from="/$(arg second_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>

  <!-- third turtlebot -->
  <group ns = "$(arg third_tb3)" if="$(eval arg('robot_amount') > 2)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg third_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg third_tb3)
                -x $(arg third_tb3_x_pos)
                -y $(arg third_tb3_y_pos)
                -z $(arg third_tb3_z_pos)
                -Y $(arg third_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg third_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg third_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg third_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg third_tb3)"/>
    <remap from="/$(arg third_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>


  <!-- fourth turtlebot -->
  <group ns = "$(arg fourth_tb3)" if="$(eval arg('robot_amount') > 3)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg fourth_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg fourth_tb3)
                -x $(arg fourth_tb3_x_pos)
                -y $(arg fourth_tb3_y_pos)
                -z $(arg fourth_tb3_z_pos)
                -Y $(arg fourth_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg fourth_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg fourth_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg fourth_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg fourth_tb3)"/>
    <remap from="/$(arg fourth_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>


  <!-- fifth turtlebot -->
  <group ns = "$(arg fifth_tb3)" if="$(eval arg('robot_amount') > 4)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg fifth_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg fifth_tb3)
                -x $(arg fifth_tb3_x_pos)
                -y $(arg fifth_tb3_y_pos)
                -z $(arg fifth_tb3_z_pos)
                -Y $(arg fifth_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg fifth_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg fifth_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg fifth_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg fifth_tb3)"/>
    <remap from="/$(arg fifth_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>


  <!-- sixth turtlebot -->
  <group ns = "$(arg sixth_tb3)" if="$(eval arg('robot_amount') > 5)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg sixth_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg sixth_tb3)
                -x $(arg sixth_tb3_x_pos)
                -y $(arg sixth_tb3_y_pos)
                -z $(arg sixth_tb3_z_pos)
                -Y $(arg sixth_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg sixth_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg sixth_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg sixth_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg sixth_tb3)"/>
    <remap from="/$(arg sixth_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>


  <!-- seventh turtlebot -->
  <group ns = "$(arg seventh_tb3)" if="$(eval arg('robot_amount') > 6)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg seventh_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg seventh_tb3)
                -x $(arg seventh_tb3_x_pos)
                -y $(arg seventh_tb3_y_pos)
                -z $(arg seventh_tb3_z_pos)
                -Y $(arg seventh_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg seventh_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg seventh_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg seventh_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg seventh_tb3)"/>
    <remap from="/$(arg seventh_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>


  <!-- eigth turtlebot -->
  <group ns = "$(arg eigth_tb3)" if="$(eval arg('robot_amount') > 7)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg eigth_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg eigth_tb3)
                -x $(arg eigth_tb3_x_pos)
                -y $(arg eigth_tb3_y_pos)
                -z $(arg eigth_tb3_z_pos)
                -Y $(arg eigth_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg eigth_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg eigth_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg eigth_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg eigth_tb3)"/>
    <remap from="/$(arg eigth_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>


  <!-- ninth turtlebot -->
  <group ns = "$(arg ninth_tb3)" if="$(eval arg('robot_amount') > 8)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg ninth_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg ninth_tb3)
                -x $(arg ninth_tb3_x_pos)
                -y $(arg ninth_tb3_y_pos)
                -z $(arg ninth_tb3_z_pos)
                -Y $(arg ninth_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg ninth_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg ninth_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg ninth_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg ninth_tb3)"/>
    <remap from="/$(arg ninth_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>


  <!-- tenth turtlebot -->
  <group ns = "$(arg tenth_tb3)" if="$(eval arg('robot_amount') > 9)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg tenth_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf
                -model $(arg tenth_tb3)
                -x $(arg tenth_tb3_x_pos)
                -y $(arg tenth_tb3_y_pos)озалипаю

                -z $(arg tenth_tb3_z_pos)
                -Y $(arg tenth_tb3_yaw)
                -param robot_description" />

    <!-- params for path_planner -->
    <param name="hweight" value="$(arg hweight)"/>
    <param name="metricType" value="$(arg metricType)"/>
    <remap from="/$(arg tenth_tb3)/set_occupancy_grid" to="/set_occupancy_grid"/>
    <remap from="/$(arg tenth_tb3)/global_to_grid" to="/global_to_grid"/>
    <remap from="/$(arg tenth_tb3)/grid_to_global" to="/grid_to_global"/>


    <!-- core nodes -->
    <node name="path_planner" pkg="path_planner" type="path_planner" output="screen"/>
    <node name="target_dispatcher" pkg="target_dispatcher" type="target_dispatcher"  output="screen"/>
    <node name="target_follower" pkg="target_follower" type="target_follower"  output="screen"/>

    <!-- this is for nexus position -->
    <param name="model_name" value="$(arg tenth_tb3)"/>
    <remap from="/$(arg tenth_tb3)/gazebo/model_states" to="/gazebo/model_states"/>

    <node name="nexus_position" pkg="nexus_position" type="nexus_position"  output="screen"/>
    <node name="nexus_velocity" pkg="nexus_velocity" type="nexus_velocity"  output="screen" />
  </group>



</launch>
